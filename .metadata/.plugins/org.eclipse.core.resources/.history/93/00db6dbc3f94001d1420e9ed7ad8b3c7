package com.examplo.projetobackend.repository;

import java.util.ArrayList;
import java.util.InputMismatchException;
import java.util.List;
import java.util.Optional;

import org.springframework.stereotype.Repository;

import com.examplo.projetobackend.model.Produto;
import com.examplo.projetobackend.model.exception.ResourceNotFoundException;





@Repository
public class ProdutoRepository {

    private List <Produto> produtos = new ArrayList<>();
    private Integer ultimoId = 0;
    
    
    /**
     * Método para retornar uma lista de produtos
     * @return Lista de produtos
     */
    public List <Produto> obterProdutos(){
        return produtos;
    }
    
    
    /**
     * Método para encontar o produto pelo id 
     * @param id do produto será localizado
     * @return Retorna um produto caso tenha encontrado 
     */
    public Optional <Produto> obterPorId (Integer id){
        return produtos.stream()
        .filter(produto -> produto.getId() == id)
        .findFirst();
    }
    
    /**
     * Método para adicionar produto na lista
     * @param produto que será adicionado
     * @return Retorna o produto que foi adicionado
     */
    public Produto adicionar (Produto produto){
        
        ultimoId ++;
    
       produto.setId(ultimoId);
       produtos.add(produto);
    
       return produto;
    }
    
    
    /**
     * Método para deletar um produto por id
     * @param id do produto a ser deletado
     */
    public void deletar (Integer id) {
        produtos.removeIf(produto -> produto.getId() == id);
    }
    
    /**
     * Método para atualizar o produto na lista
     * @param produto a ser atualizado
     * @return Produto atualizado
     */
    public Produto atualizar (Produto produto){
            // encontrar o produto na lista
            Optional <Produto> produtoEncontrado = obterPorId(produto.getId());
    
            if (produtoEncontrado.isEmpty()){
                throw new ResourceNotFoundException("Produto não encontrado !");
            }
    
            // Remover produto
    
            deletar(produto.getId());
    
            // Adicionar produto
               produtos.add(produto); 
    
               return produto;
    }
    
    



    
}
